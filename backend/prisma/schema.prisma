// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  username        String   @unique
  email           String?  @unique
  passwordHash    String?
  name            String?
  googleId        String?  @unique // Google OAuth ID
  profilePicture  String?  // Google profile picture URL
  tokens          Int      @default(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  posts    Post[]
  projects Project[]
  stars    Star[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Project {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  command     String?
  language    String
  code        String    @db.Text
  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  stars       Star[]

  @@map("projects")
  @@index([userId])
}

model Star {
  id        Int      @id @default(autoincrement())
  userId    Int
  projectId Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, projectId], name: "unique_user_project_star")
  @@map("stars")
}

model AnalyticsEvent {
  id        Int      @id @default(autoincrement())
  eventType String
  sessionId String
  userId    String?   // Anonymized user ID (not email/username)
  language  String
  timestamp DateTime
  details   Json      // JSONB for flexible event data
  userAgent String?
  ipAddress String?   // Hashed/anonymized IP for privacy
  createdAt DateTime @default(now())

  @@map("analytics_events")
  @@index([eventType])
  @@index([sessionId])
  @@index([userId])
  @@index([timestamp])
}
